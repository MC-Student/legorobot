#include <kipr/botball.h>

int speed=100;
#define TICKSIN90 1500
#define LEFTMOTOR 1
#define RIGHTMOTOR 3
/*the following function goes forward for the no. of ticks specified by that argument*/
void go_forward(int ticks)
{
  cmpc(LEFTMOTOR);
  while (gmpc(LEFTMOTOR)< ticks)
  {
  motor(LEFTMOTOR, speed);
  motor(RIGHTMOTOR, speed);
  }
  ao();
  printf("finished going forward\n");
}

/*the following function goes for the no. of ticks specified by that argument*/
void back_up(int ticks)
{
  cmpc(LEFTMOTOR);
  while (-gmpc(LEFTMOTOR)< ticks)
  {
  motor(LEFTMOTOR, -speed);
  motor(RIGHTMOTOR, -speed);
  }
  ao();
  printf("finished backup\n");
}
void turn_left()
{
    cmpc(LEFTMOTOR);
  	while (gmpc(LEFTMOTOR)< TICKSIN90)
  {
  	motor(LEFTMOTOR, speed);
  	motor(RIGHTMOTOR, -speed);
	}
    printf("turnedright\n");
  ao();
}
void turn_small_left()
{
    motor(LEFTMOTOR, speed);
  	motor(RIGHTMOTOR, -speed);
    msleep(100);
    ao();
}
void turn_small_right()
{
    motor(LEFTMOTOR, -speed);
  	motor(RIGHTMOTOR, speed);
    msleep(100);
    ao();
}

void turn_right()
{
    cmpc(RIGHTMOTOR);
  	while (gmpc(RIGHTMOTOR)< TICKSIN90)
  {
  	motor(LEFTMOTOR, -speed);
  	motor(RIGHTMOTOR, speed);
	}
    printf("turnedleft\n");
  ao();
}

void astronaut_suits()
{
    back_up(1000);
    turn_right();
    back_up(2000);
    go_forward(1000);
    turn_left();
    go_forward(500);
    turn_right();
    back_up(1000);
    }
    
/*void get_processed_ore_cubes()
{}
void get_material_transport()
{}
void get_blue_poms()
{}*/


